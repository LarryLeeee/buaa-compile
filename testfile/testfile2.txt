
/*
这份程序用来覆盖函数形参与实参
同时我们定义多个函数
*/

int A1[3][3] = {{3, 2, 1},
                {6, 5, 4},
                {9, 8, 7}},
        B1[3][3] = {{1, 2, 3},
                    {4, 5, 6},
                    {7, 8, 9}};
int temp[3][3] = {{0, 0, 0},
                  {0, 0, 0},
                  {0, 0, 0}};

int use[3] = {1, 1, 1};
int test1[3] = {10, 12, 89};
int test2[3] = {23, 353, 13};

void transfer1(int A[][3], int B[][3]) {
    int i = 0, j = 0;
    while (i < 3) {
        while (j < 3) {
            temp[i][j] = A[i][j];
            A[i][j] = B[i][j];
            B[i][j] = temp[i][j];
            j = j + 1;
        }
        i = i + 1;
    }
}

void transfer2(int A[], int B[]) {
    int i = 0;
    while (i < 3) {
        use[i] = A[i];
        A[i] = B[i];
        B[i] = use[i];
        i = i + 1;
    }
    printf("%d\n", use[2]);
}

int add(int a, int b, int c) {
    return a + b + c;
}

int get() {
    int getter;
    getter = getint();
    return getter;
}

void global() {
    return;
}


int main() {
    printf("20373043\n");
    int i = 0;
    while (i < 3) {
        transfer1(A1, B1);
        transfer2(test1, test2);
        transfer2(A1[2], B1[0]);
        i = i + 1;
        if (i != 2) {
            printf("%d\n", temp[i][i]);
        }
    }
    global();
    printf("test1:%d test2:%d\n", get(), add(i, 1, 2));
    return 0;
}