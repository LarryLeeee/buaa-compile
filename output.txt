declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@const1 = dso_local  constant i32 0
@const1_arr = dso_local  constant [2 x i32][i32 1,i32 2]
@const2_arr = dso_local  constant [3 x i32][i32 3,i32 4,i32 5]
@const1_arr2 = dso_local  constant [2 x [2 x i32]][[2 x i32][i32 6,i32 7],[2 x i32][i32 8,i32 9]]
@_my_const = dso_local  constant i32 2
@const2 = dso_local  constant i32 -2
@const3 = dso_local  constant i32 4
@var1 = dso_local  global i32 3
@var2 = dso_local  global i32 2
@var_arr = dso_local  global [4 x i32][i32 1,i32 2,i32 3,i32 4]
@var_arr2 = dso_local  global [2 x [1 x i32]][[1 x i32][i32 1],[1 x i32][i32 10]]
@var3 = dso_local  global i32 0
@var4 = dso_local  global i32 0
@var5 = dso_local  global [2 x i32][i32 0,i32 0]
@var6 = dso_local  global [3 x [5 x i32]][[5 x i32][i32 0,i32 0,i32 0,i32 0,i32 0],[5 x i32][i32 0,i32 0,i32 0,i32 0,i32 0],[5 x i32][i32 0,i32 0,i32 0,i32 0,i32 0]]

@_str_2 = constant [13 x i8] c"test_return:\00"
@_str_3 = constant [17 x i8] c" <==> correct:3\0a\00"
@_str_4 = constant [10 x i8] c"20373585\0a\00"
@_str_5 = constant [19 x i8] c"const1_arr2[1][1]:\00"
@_str_6 = constant [17 x i8] c" <==> correct:9\0a\00"

define dso_local i32 @test_return(){

est_return_entry:
	%v11 = add i32 2,7
	%v12 = mul i32 1,%v11
	%v13 = srem i32 %v12,4
	%v14 = sub i32 2,12
	%v15 = sdiv i32 %v14,5
	%v16 = sub i32 %v13,%v15
	ret i32 %v16
}

define dso_local void @run_test_return(){

un_test_return_entry:
	%v17 = call i32 @test_return()
	%v18 = getelementptr inbounds [13 x i8], [13 x i8]* @_str_2, i32 0, i32 0
	call void @putstr(i8* %v18)
	call void @putint(i32 %v17)
	%v19 = getelementptr inbounds [17 x i8], [17 x i8]* @_str_3, i32 0, i32 0
	call void @putstr(i8* %v19)
	ret void
}

define dso_local i32 @main(){

ain_entry:
	%v20 = getelementptr inbounds [10 x i8], [10 x i8]* @_str_4, i32 0, i32 0
	call void @putstr(i8* %v20)
	%v21 = alloca i32
	%v22 = load i32, i32* @const1
	store i32 %v22, i32* %v21
	%v23 = alloca [2 x i32]
	%v24= getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* @const1_arr2, i32 0, i32 1
	%v25= getelementptr [2 x i32], [2 x i32]* %v24, i32 0, i32 1
	%v26 = load i32, i32* %v25
	%v27 = getelementptr inbounds [19 x i8], [19 x i8]* @_str_5, i32 0, i32 0
	call void @putstr(i8* %v27)
	call void @putint(i32 %v26)
	%v28 = getelementptr inbounds [17 x i8], [17 x i8]* @_str_6, i32 0, i32 0
	call void @putstr(i8* %v28)
	call void @run_test_return()
	ret i32 0
}
